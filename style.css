@import url(./reset.css);
@font-face {
	font-family: 'Inter';
	src: url('./assets/fonts/Inter-VariableFont_slnt\,wght.ttf') format('truetype');
	font-weight: 100 1000;
	font-display: block;    /* briefly hide the text until the font has fully downloaded */
}

.inter-regular {
    font-family: 'Inter';
    font-variation-settings: 'wght' 400, 'wdth' 100;
}

.inter-bold {
    font-family: 'Inter';
    font-variation-settings: 'wght' 700;
}

.inter-extra-bold {
    font-family: 'Inter';
    font-variation-settings: 'wght' 800;
}

:root {
    /* primary */
    --primary-soft-orange: hsl(35, 77%, 62%);
    --primary-soft-red: hsl(5, 85%, 63%);

    /* neutral */
    --neutral-off-white: hsl(36, 100%, 99%);
    --neutral-grayish-blue: hsl(233, 8%, 79%);
    --neutral-dark-grayish-blue: hsl(236, 13%, 42%);
    --neutral-very-dark-blue: hsl(240, 100%, 5%);

    /* font body-copy */
    --fs-body-copy: 15px;
}

html {
    font-size: var(--fs-body-copy);
}

body {
    /*  desktop: 1200x855px centered within 1440x1056 */
    /*  mobile: 375x1872px
        mobile content: 343px wide  */
    font-family: 'Inter';
    min-height: 100vh;
    
    display: grid;
}

.dark-overlay {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: 100;
    background-color: rgba(0, 0, 0, 50%);
}

.hidden {
    display: none;
}

.overflow-hidden {
    overflow-y: hidden;
    height: 100vh;
    padding-right: 9px;
}

/* from: https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html */
.sr-only:not(:focus):not(:active) {
    clip: rect(0 0 0 0); 
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap; 
    width: 1px;
}

button {
    /* reset for button */
    display: inline-block;
    border: none;
    padding: 0;
    margin: 0;
    text-decoration: none;
    background: none;
}

.masthead {
    min-width: 350px;
    margin-block: 1rem;
}

header{
    margin-block: auto;
    margin-left: 1rem;
}

.navigation-container {
    display: flex;
    /* --gap: clamp(1rem, 2vw, 3rem); */
    list-style: none;
}

.navigation-container > li > a {
    text-decoration: none;
    color: var(--neutral-very-dark-blue);
    font-size: 1.2rem;
}

@media screen and (max-width: 767px) {
    .navigation-container {
        position: fixed;
        z-index: 1000;
        inset: 0 0 0 30%;
        padding: min(20rem, 15vh) 2rem;
        margin: 0;
        flex-direction: column;
        transform: translateX(100%);
        background-color: var(--neutral-off-white);
    }
}

.animate-on-mobile {
    transition: transform 500ms ease-in-out;
}

.navigation-container[data-visible="true"] {
    transform: translateX(0);
}

.navigation-container > li > a {
    /* the display: inline-block is here so that when the link is hovered later, even when cursor is just on li, the font will change color */
    display: inline-block;
    /* width is set to 100% so that the entire (almost) line can change color when later hovered on */
    /* I did wish the inversion later would go from edge to edge, but I can't find the KP's video */
    /* Oh, the design for this challenge doesn't do inversion, just a color change */
    width: 100%;
    padding: .6rem 1rem;
}

.navigation-container > li > a:hover {
    color: var(--primary-soft-red);
}

.mobile-nav-toggle {
    display: block;
    position: absolute;
    z-index: 2000;
    right: 1rem;
    top: 1.5rem;
    background: transparent;
    background-image: url('../news-homepage-main/assets/images/icon-menu.svg');
    background-repeat: no-repeat;
    background-position: center;
    width: 1.5rem;
    aspect-ratio: 1 / 1;
    border: 0;
    transition: transform 500ms ease-in-out;
}

.mobile-nav-toggle[aria-expanded="true"]{
    right: calc(1rem + 9px);
    /* when the transform is performed, the svg shifts position in X. I don't know the solution yet */
    transform: rotate(1turn);
    background-image: url('../news-homepage-main/assets/images/icon-menu-close.svg');
}

main {
    place-self: center;
    display: grid;  
    gap: 2rem;
    grid-auto-columns: minmax(auto, 350px); 
    grid-auto-rows: auto;
    grid-template-areas:
    'one'
    'two'
    'three'
    'four'
    'five'
    'six';
}

.headline {
    display: contents;
}

.headline > picture {
    grid-area: one;
}

.headline-title {
    grid-area: two;

    font-size: 2.5rem;
    line-height: 1;
    margin-right: 8rem;
}

.headline .content {
    grid-area: three;
}

.headline:nth-child(4) {
    grid-area: four;
}

.headline-link {
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: .4em;
    color: var(--neutral-off-white);
    background-color: var(--primary-soft-red);
    width: fit-content;
    padding: 1rem 2rem;
}

.headline-link:hover {
    background-color: var(--neutral-very-dark-blue);
    color: var(--neutral-off-white);
}

.new-articles {
    grid-area: five;
    place-self: center;
    /*  desktop mode, area: 350x511px
        display: flex;
        bottom border for each article except last */
    /*  mobile mode area: 343x488px */
    background-color: var(--neutral-very-dark-blue);
    color: var(--neutral-off-white);
    margin-block-end: .75rem;
    padding: 1.5rem;

    display: flex;
    flex-direction: column;
    gap: 2rem;
    justify-content: space-around;
    max-width: 350px; /* even in desktop mode */
}

.new-articles-title {
    font-size: 1.4rem;
}

.new-articles-title a {
    text-decoration: none;
    color: var(--neutral-off-white);
}

.new-articles-title a:hover {
    color: var(--primary-soft-orange);
}

.new-articles > article > p {
    border-bottom: 1px solid var(--neutral-off-white);
    padding-block: .8rem 1.5rem;
    opacity: 0.7;
}

.new-articles > article:last-child > p {
    padding-block-end: .75rem;
    border: none;
}

.new-articles-header {
    color: var(--primary-soft-orange);
    font-size: 2.5rem;
}

.trending {
    grid-area: six;
    display: contents;
    /*  desktop mode area: 926x108px
        img inside: 84x108px    */
    /*  mobile mode img size: 100x129px */
}

.trending > article {
    display: grid;
    grid-template-columns: 7rem 1fr;
    grid-template-rows: repeat(3, auto);
    column-gap: 1rem;
    margin-bottom: 2rem; 
    width: 345px;
}

.trending > article > img {
    grid-column: 1 / 2;
    grid-row: 1 / -1;
    min-width: 7rem;
    height: 100%;
}

.trending-rank {
    color: var(--neutral-grayish-blue);
    font-size: 2rem;
}

.trending-title a {
    text-decoration: none;
    color: var(--neutral-very-dark-blue);
}

.trending-title a:hover {
    color: var(--primary-soft-red);
}

.trending-snippet {
    color: var(--neutral-dark-grayish-blue);
}

footer {
    padding: .5rem 0;
    margin-top: auto;
}

.attribution {
    font-size: 11px;
    text-align: center;
}

.attribution a {
    color: hsl(228, 45%, 44%);
}

@media screen and (min-width: 768px) {
        .masthead {
            margin-block: 1rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            justify-content: space-between;
            margin-inline: auto;
        }

        .navigation-container {
            flex-direction: row;
            gap: var(--gap, 1rem);
            padding: 0;
        }

        .mobile-nav-toggle {
            display: none;
        }
        
        /* Strangely, putting spaces in between the grid area names to align them made the layout work */
        /* And then later removing them, the problem does not recur */
        main {
            grid-template-areas:
            'one  one'
            'two  three'
            'two  four'
            'five five'
            'six  six';
        }

        .headline-title {
            font-size: 3.5rem;
            line-height: 1.1;
            margin-right: 6rem;
        }

        .headline-link {
            height: min-content;
        }

        .headline > * {
            margin: 0;
        }
    }

@media screen and (min-width: 1100px) {
        .masthead {
            max-width: 100%;
            align-items: end;
        }
        .masthead > * {
            margin: 0;
            align-items: end;
        }
        main {
            grid-template-areas:
            'one one   five'
            'two three five'
            'two four  five'
            'six six   six';
        }
    }
